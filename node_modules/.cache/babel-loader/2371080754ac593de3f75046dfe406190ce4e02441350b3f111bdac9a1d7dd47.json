{"ast":null,"code":"var _jsxFileName = \"/Users/cdeachaval/Desktop/local/random-quote-generator/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quoteInfo, setQuoteInfo] = useState({});\n  useEffect(() => {\n    getQuote();\n  }, []);\n  const getQuote = () => {\n    fetch('https://api.quotable.io/random').then(response => {\n      return response.json();\n    }).then(data => {\n      setQuoteInfo({\n        text: data.content,\n        author: data.author\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random Quote App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"quote-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"text\",\n        children: quoteInfo.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"author\",\n        children: quoteInfo.author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: getQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        id: \"tweet-quote\",\n        href: 'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' + encodeURIComponent('\"' + quoteInfo.text + '\" ' + quoteInfo.author),\n        children: \"Tweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3Q7B10yFcqcB/l/eWYEXZ0XUeas=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","quoteInfo","setQuoteInfo","getQuote","fetch","then","response","json","data","text","content","author","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","href","encodeURIComponent","_c","$RefreshReg$"],"sources":["/Users/cdeachaval/Desktop/local/random-quote-generator/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [quoteInfo, setQuoteInfo] = useState({})\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  const getQuote = () => {\n    fetch('https://api.quotable.io/random')\n      .then((response) => { return response.json();\n      })\n      .then((data) => {\n        setQuoteInfo({\n          text: data.content,\n          author: data.author\n        });\n      });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Random Quote App</h1>\n      <div id=\"quote-box\">\n        <p id=\"text\">{quoteInfo.text}</p>\n        <p id=\"author\">{quoteInfo.author}</p>\n      </div>\n      <div id=\"button-box\">\n        <button id=\"new-quote\" onClick={getQuote}>New Quote</button>\n        <a id=\"tweet-quote\" \n          href={'https://twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=' \n            + encodeURIComponent('\"' + quoteInfo.text + '\" ' + quoteInfo.author)}\n          >Tweet</a>\n      </div>  \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAGA,CAAA,KAAM;IACrBC,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAK;MAAE,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdN,YAAY,CAAC;QACXO,IAAI,EAAED,IAAI,CAACE,OAAO;QAClBC,MAAM,EAAEH,IAAI,CAACG;MACf,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBnB,OAAA;MAAKoB,EAAE,EAAC,WAAW;MAAAL,QAAA,gBACjBf,OAAA;QAAGoB,EAAE,EAAC,MAAM;QAAAL,QAAA,EAAEZ,SAAS,CAACQ;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCnB,OAAA;QAAGoB,EAAE,EAAC,QAAQ;QAAAL,QAAA,EAAEZ,SAAS,CAACU;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACNnB,OAAA;MAAKoB,EAAE,EAAC,YAAY;MAAAL,QAAA,gBAClBf,OAAA;QAAQoB,EAAE,EAAC,WAAW;QAACC,OAAO,EAAEhB,QAAS;QAAAU,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5DnB,OAAA;QAAGoB,EAAE,EAAC,aAAa;QACjBE,IAAI,EAAE,6EAA6E,GAC/EC,kBAAkB,CAAC,GAAG,GAAGpB,SAAS,CAACQ,IAAI,GAAG,IAAI,GAAGR,SAAS,CAACU,MAAM,CAAE;QAAAE,QAAA,EACtE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CApCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}